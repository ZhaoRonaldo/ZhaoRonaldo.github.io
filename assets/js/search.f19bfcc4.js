(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{285:function(t,i,a){"use strict";a.r(i),i.default=[{title:"HTML",path:"/posts/html.html",strippedContent:" ## HTML    HTML称为[超文本](https://baike.baidu.com/item/超文本/2832422)标记语言，是一种标识性的语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的[Internet](https://baike.baidu.com/item/Internet/272794)资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明[文字](https://baike.baidu.com/item/文字/612910)，[图形](https://baike.baidu.com/item/图形/773307)、[动画](https://baike.baidu.com/item/动画/206564)、[声音](https://baike.baidu.com/item/声音/33686)、[表格](https://baike.baidu.com/item/表格/3371820)、[链接](https://baike.baidu.com/item/链接/2665501)等。 [1]     超文本是一种组织信息的方式，它通过超级链接方法将文本中的文字、图表与其他信息媒体相关联。这些相互关联的信息媒体可能在同一文本中，也可能是其他文件，或是地理位置相距遥远的某台计算机上的文件。这种组织信息方式将分布在不同位置的信息资源用随机方式进行连接，为人们查找，检索信息提供方便    ## 整体结构    一个网页对应多个HTML文件，超文本标记语言文件以.htm（磁盘操作系统[DOS](https://baike.baidu.com/item/DOS)限制的外语缩写）为[扩展名](https://baike.baidu.com/item/扩展名)或.html（外语缩写）为[扩展名](https://baike.baidu.com/item/扩展名)。可以使用任何能够生成[TXT](https://baike.baidu.com/item/TXT)类型[源文件](https://baike.baidu.com/item/源文件)的文本编辑器来产生超文本标记语言文件，只用修改文件[后缀](https://baike.baidu.com/item/后缀)即可。标准的超文本标记语言文件都具有一个基本的整体结构，标记一般都是成对出现（部分标记除外例如：br），即超文本标记语言文件的开头与结尾标志和超文本标记语言的头部与实体两大部分。有三个双标记符用于[页面](https://baike.baidu.com/item/页面)整体结构的确认。     标记符<html>，说明该文件是用超文本标记语言（本标签的中文全称）来描述的，它是文件的开头;而</html>，则表示该文件的结尾，它们是超文本标记语言文件的开始标记和结尾标记。    ## 头部内容    标记符< html>：说明该文件是用超文本标记语言来描述的，它是文件的开头，而html则表示该文件的结尾，它们是超文本标记语言文件的开始标记和结尾标记。     head：这标记符分别表示头部信息的开始和结尾。头部中包含的标记是页面的标题、序言、说明等内容，它本身不作为内容来显示，但影响网页显示的效果。头部中最常用的标记符是标题标记符和meta标记符，其中标题标记符用于定义网页的标题，它的内容显示在网页窗口的标题栏中，网页标题可被浏览器用做书签和收藏清单。    ## 主体内容    body网页中显示的实际内容均包含在这2个正文标记符之间。正文标记符又称为实体标记。    "},{title:"JS",path:"/posts/js.html",strippedContent:" ## JavaScript    JavaScript（简称“JS”） 是一种具有[函数](https://baike.baidu.com/item/函数/301912)优先的轻量级，解释型或即时编译型的[编程语言](https://baike.baidu.com/item/编程语言/9845131)。虽然它是作为开发Web页面的[脚本语言](https://baike.baidu.com/item/脚本语言/1379708)而出名的，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持[面向对象](https://baike.baidu.com/item/面向对象/2262089)、命令式和声明式（如[函数式编程](https://baike.baidu.com/item/函数式编程/4035031)）风格。    JavaScript在1995年由[Netscape](https://baike.baidu.com/item/Netscape)公司的[Brendan Eich](https://baike.baidu.com/item/Brendan Eich)，在[网景导航者](https://baike.baidu.com/item/网景导航者/10404300)浏览器上首次设计实现而成。因为[Netscape](https://baike.baidu.com/item/Netscape)与[Sun](https://baike.baidu.com/item/Sun/69463)合作，[Netscape](https://baike.baidu.com/item/Netscape)管理层希望它外观看起来像[Java](https://baike.baidu.com/item/Java/85979)，因此取名为JavaScript。但实际上它的语法风格与[Self](https://baike.baidu.com/item/Self/4959923)及[Scheme](https://baike.baidu.com/item/Scheme)较为接近。     JavaScript的标准是[ECMAScript](https://baike.baidu.com/item/ECMAScript/1889420) 。截至 2012 年，所有[浏览器](https://baike.baidu.com/item/浏览器/213911)都完整的支持ECMAScript 5.1，旧版本的浏览器至少支持ECMAScript 3 标准。2015年6月17日，ECMA国际组织发布了ECMAScript 的第六版，该版本正式名称为 ECMAScript 2015，但通常被称为ECMAScript 6 或者ES6。    ## 组成对象    [ECMAScript](https://baike.baidu.com/item/ECMAScript)，描述了该语言的语法和基本[对象](https://baike.baidu.com/item/对象/2331271)。     [文档对象模型](https://baike.baidu.com/item/文档对象模型)（DOM），描述处理网页内容的方法和接口。     浏览器对象模型（[BOM](https://baike.baidu.com/item/BOM/1801)），描述与浏览器进行交互的[方法](https://baike.baidu.com/item/方法/3009367)和[接口](https://baike.baidu.com/item/接口)。    ## 基本特点    JavaScript是一种属于网络的脚本语言,已经被广泛用于Web应用开发,常用来为网页添加各式各样的动态功能,为用户提供更流畅美观的浏览效果。通常JavaScript脚本是通过嵌入在HTML中来实现自身的功能的。     1. 是一种解释性脚本语言（代码不进行[预编译](https://baike.baidu.com/item/预编译)）。   2. 主要用来向[HTML](https://baike.baidu.com/item/HTML)（[标准通用标记语言](https://baike.baidu.com/item/标准通用标记语言)下的一个应用）页面添加交互行为。   3. 可以直接嵌入HTML页面，但写成单独的[js](https://baike.baidu.com/item/js/10687961)文件有利于结构和行为的[分离](https://baike.baidu.com/item/分离)。   4. 跨平台特性，在绝大多数浏览器的支持下，可以在多种平台下运行（如[Windows](https://baike.baidu.com/item/Windows)、[Linux](https://baike.baidu.com/item/Linux)、[Mac](https://baike.baidu.com/item/Mac/173)、[Android](https://baike.baidu.com/item/Android/60243)、[iOS](https://baike.baidu.com/item/iOS/45705)等）。  5. Javascript脚本语言同其他语言一样，有它自身的基本数据类型，表达式和算术运算符及程序的基本程序框架。Javascript提供了四种基本的数据类型和两种特殊数据类型用来处理数据和文字。而变量提供存放信息的地方，表达式则可以完成较复杂的信息处理。    ## 特性    JavaScript脚本语言具有以下特点:    (1)[脚本语言](https://baike.baidu.com/item/脚本语言)。JavaScript是一种解释型的脚本语言,C、[C++](https://baike.baidu.com/item/C%2B%2B)等语言先[编译](https://baike.baidu.com/item/编译)后执行,而JavaScript是在程序的运行过程中逐行进行解释。    (2)基于对象。JavaScript是一种基于对象的脚本语言,它不仅可以创建对象,也能使用现有的对象。    (3)简单。JavaScript语言中采用的是弱类型的变量类型,对使用的数据类型未做出严格的要求,是基于Java基本语句和控制的脚本语言,其设计简单紧凑。    (4)动态性。JavaScript是一种采用事件驱动的脚本语言,它不需要经过Web服务器就可以对用户的输入做出响应。在访问一个网页时,鼠标在网页中进行鼠标点击或上下移、窗口移动等操作JavaScript都可直接对这些事件给出相应的响应。    (5)跨平台性。JavaScript脚本语言不依赖于操作系统,仅需要浏览器的支持。因此一个JavaScript脚本在编写后可以带到任意机器上使用,前提上机器上的浏览器支 持JavaScript脚本语言,JavaScript已被大多数的浏览器所支持。      不同于服务器端脚本语言，例如[PHP](https://baike.baidu.com/item/PHP/9337)与[ASP](https://baike.baidu.com/item/ASP/128906)，JavaScript主要被作为客户端脚本语言在用户的浏览器上运行，不需要服务器的支持。所以在早期程序员比较青睐于JavaScript以减少对服务器的负担，而与此同时也带来另一个问题：安全性。    而随着服务器的强壮，虽然程序员更喜欢运行于服务端的脚本以保证安全，但JavaScript仍然以其跨平台、容易上手等优势大行其道。同时，有些特殊功能（如[AJAX](https://baike.baidu.com/item/AJAX/8425)）必须依赖Javascript在客户端进行支持。随着引擎如V8和框架如[Node.js](https://baike.baidu.com/item/Node.js)的发展，及其事件驱动及[异步IO](https://baike.baidu.com/item/异步IO)等特性，JavaScript逐渐被用来编写服务器端程序。    ## 小结    nJavaScript是由浏览器的解释器解释执行的程序语言。    nJavaScript脚本在客户端执行，从而间接地提升了Web服务器的性能。    nJavaScript的变量是采用弱类型的形式。    nJavaScript中有五种简单数据类型。    nJavaScript用typeof操作符来检测给定变量的数据类型。    nJavaScript的运算符有算术运算符、赋值运算符、比较运算符和逻辑运算符。    nJavaScript的流程控制语句有顺序结构、选择结构和循环结构。JavaScript中选择结构有if和switch。循环结构有while、do…while和for。"},{title:"实训笔记",path:"/posts/shixun.html",strippedContent:' ## 第一天    1. 安装nodejs。    2. 安装typora。    3. 安装jquery。    4. 注册GitHub。  （代码托管器。）  5. 学习GitHub菜鸟教程    ## 第二天    1. 安装git。 （上传工具）    2. 打开[www.github.com](http://www.github.com)创建新的代码库，命名为：用户名+。GitHub.io    3. 3.创建工作文件夹，在文件夹中右键打开Git Bash Hear,输入git clone +粘贴代码库地址。    4. 4在文件夹中创建index.html, 并用记事本方式输入H5格式与内容       5.右键打开Git Bash Hear。       6.输入git status (粘贴本人地址)       7．输入git add . (检查状态)       8.输入git commit m"(注释)" (提交版本库)       9.输入git push (上传)       10.上传邮箱。       11.上传用户名。       12.复制新手教程。       13.输入账号密码。       14.刷新页面，出现上传文件。       15.复制 用户名+ .github.io, 打开新网页粘贴。    ## 第三天       1.npm (国外的下载)。       2.cnpm (国内镜像)。       3.输入npm -V。       4.百度淘宝镜像，复制使用说明，粘贴至c盘根目录cmd。       5.等待下载，下载完成在cmd中输入cnpm -v。       6.输入cnpm install -g @vue/cli.       7.输入vue -V。       8.输入cnpmi -g vuepress。       9.百度vuepress官网学习。       10.建立工作文件夹,命名用英文。       11.创建README.md文件。       12.cmd命令打开文件夹。       13.输入vuepress dev。       14.复制链接，打开浏览器。    ## 第四天       1.创建文件夹， 命名为vuepress。       2.右键打开Git Bash Hear.       3.百度liujiaozhu666. github.io。       4.点击页面最下方indigo material。       5.复制模板分支命令，粘贴至git。       6.运行init.sh。       7.后续运行在文件夹cmd中输入npm run dev。       8.复制链接百度打开。       9.修改方式: vue.. > docs-> .vuepress > config.js.       10.可修改项: title, description, author, email, github。    ## 第五天       1.创建.md文件。       2.将文件拖入vuepress > docs- > posts。       3.编辑.md文件:    ​         title:标题。date:时间。tags: [类型]。       4.下一行开始输入内容。       5.在文件夹cmd中输入npm run dev。6.复制链接百度打开。       7.在e..-node ... >deploy.sh中， 第行!前加#注释， 最下方20行(git push -f删_除#，修改地址。       8.在文件夹cmd中输入npm run build, 打包完成。       9.双击文件夹中deploy.sh。       10.打开github官网查看是否打包 上传成功'},{title:"css",path:"/posts/css.html",strippedContent:" ## CSS    层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现[HTML](https://baike.baidu.com/item/HTML)（[标准通用标记语言](https://baike.baidu.com/item/标准通用标记语言/6805073)的一个应用）或[XML](https://baike.baidu.com/item/XML)（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。    CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。     ## 语言特点    CSS为HTML标记语言提供了一种样式描述，定义了其中元素的显示方式。CSS在Web设计领域是一个突破。利用它可以实现修改一个小的样式更新与之相关的所有页面元素。    总体来说，CSS具有以下特点：    **丰富的样式定义**    CSS提供了丰富的文档样式外观，以及设置文本和背景属性的能力；允许为任何元素创建边框，以及元素边框与其他元素间的距离，以及元素边框与元素内容间的距离；允许随意改变文本的大小写方式、修饰方式以及其他页面效果。    **易于使用和修改**    CSS可以将样式定义在HTML元素的style属性中，也可以将其定义在HTML文档的header部分，也可以将样式声明在一个专门的CSS文件中，以供HTML页面引用。总之，CSS样式表可以将所有的样式声明统一存放，进行统一管理。    另外，可以将相同样式的元素进行归类，使用同一个样式进行定义，也可以将某个样式应用到所有同名的HTML标签中，也可以将一个CSS样式指定到某个页面元素中。如果要修改样式，我们只需要在样式列表中找到相应的样式声明进行修改。    **多页面应用**    CSS样式表可以单独存放在一个CSS文件中，这样我们就可以在多个页面中使用同一个CSS样式表。CSS样式表理论上不属于任何页面文件，在任何页面文件中都可以将其引用。这样就可以实现多个页面风格的统一。    **层叠**    简单的说，层叠就是对一个元素多次设置同一个样式，这将使用最后一次设置的属性值。例如对一个站点中的多个页面使用了同一套CSS样式表，而某些页面中的某些元素想使用其他样式，就可以针对这些样式单独定义一个样式表应用到页面中。这些后来定义的样式将对前面的样式设置进行重写，在浏览器中看到的将是最后面设置的样式效果。    **页面压缩**    在使用HTML定义页面效果的网站中，往往需要大量或重复的表格和font元素形成各种规格的文字样式，这样做的后果就是会产生大量的HTML标签，从而使页面文件的大小增加。而将样式的声明单独放到CSS样式表中，可以大大的减小页面的体积，这样在加载页面时使用的时间也会大大的减少。另外，CSS样式表的复用更大程度的缩减了页面的体积，减少下载的时间。    ## 工作原理    CSS是一种定义样式结构如字体、颜色、位置等的语言，被用于描述网页上的信息格式化和现实的方式。CSS样式可以直接存储于HTML网页或者单独的样式单文件。无论哪一种方式，样式单包含将样式应用到指定类型的元素的规则。外部使用时，样式单规则被放置在一个带有文件扩展名_css的外部样式单文档中。    样式规则是可应用于网页中元素，如文本段落或链接的格式化指令。样式规则由一个或多个样式属性及其值组成。内部样式单直接放在网页中，外部样式单保存在独立的文档中，网页通过一个特殊标签链接外部样式单。    名称CSS中的“层叠（cascading）”表示样式单规则应用于HTML文档元素的方式。具体地说，CSS样式单中的样式形成一个层次结构，更具体的样式覆盖通用样式。样式规则的优先级由CSS根据这个层次结构决定，从而实现级联效果。    ## 语言评价    层叠样式表（*Cascading Style Sheet，CSS*）有助于实现负责任的Web设计。CSS对开发者构建Web站点的影响很大，并且这种影响可能是无止境的。将网页的大部分甚至是全部的表示信息从（*X*）HTML文件中移出，并将它们保留在一个样式表中有诸多优点，如降低文件大小、节省网络带宽以及易于维护等。此外，站点的表现信息和核心内容相分离，使得站点的设计人员能够在短暂的时间内对整个网站进行各种各样的修改。     CSS简化了网页的格式代码，外部的样式表还会被浏览器保存在缓存里，加快了下载显示的速度，也减少了需要上传的代码数量（*因为重复设置的格式将被只保存一次*）。只要修改保存着网站格式的CSs样式表文件就町以改变整个站点的风格特色，在修改页面数量庞大的站点时，显得格外有用。这就避免了一个个网页的修改，大大减少了工作量。"}]}}]);